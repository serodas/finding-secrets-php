version: '3'
services:
    ##
    # Location Microservice
    ##
    microservice_location_php:
        container_name: microservice_location_php
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./microservices/location/app:/var/www/app:delegated
        expose:
            - 9003
            - 9000
    microservice_location_nginx:
        container_name: microservice_location_nginx
        build:
            context: .
            dockerfile: ./microservices/location/nginx/Dockerfile
        volumes:
             - ./microservices/location/app:/var/www/app:delegated
        depends_on:
            - microservice_location_php
        ports:
            - 8082:80
    microservice_location_redis:
        container_name: microservice_location_redis
        build:
            context: .
            dockerfile: ./microservices/location/redis/Dockerfile
        expose:
            - 6379
        ports:
            - 6380:6379
    ##
    # User Microservice
    ##
    microservice_user_php:
        container_name: microservice_user_php
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./microservices/user/app:/var/www/app:delegated
        expose:
            - 9003
            - 9000
    microservice_user_nginx:
        container_name: microservice_user_nginx
        build:
            context: .
            dockerfile: ./microservices/user/nginx/Dockerfile
        volumes:
             - ./microservices/user/app:/var/www/app:delegated
        depends_on:
            - microservice_user_php
        ports:
            - 8084:80
    microservice_user_redis:
        container_name: microservice_user_redis
        build:
            context: .
            dockerfile: ./microservices/user/redis/Dockerfile
        expose:
            - 6379
        ports:
            - 6379:6379

    ##
    # Battle Microservice
    ##
    microservice_battle_php:
        container_name: microservice_battle_php
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./microservices/battle/app:/var/www/app:delegated
        expose:
            - 9003
            - 9000

    microservice_battle_nginx:
        container_name: microservice_battle_nginx
        build:
            context: .
            dockerfile: ./microservices/battle/nginx/Dockerfile
        volumes:
            - ./microservices/battle/app:/var/www/app:delegated
        depends_on:
            - microservice_battle_php
        ports:
            - 8443:443
            - 8081:80

    ##
    # Secret Microservice
    ##
    microservice_secret_php:
        container_name: microservice_secret_php
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./microservices/secret/app:/var/www/app:delegated
        expose:
            - 9000
    microservice_secret_nginx:
        container_name: microservice_secret_nginx
        build:
            context: .
            dockerfile: ./microservices/secret/nginx/Dockerfile
        volumes:
            - ./microservices/secret/app:/var/www/app:delegated
        depends_on:
            - microservice_secret_php
        ports:
            - 8083:80
    microservice_secret_database:
        container_name: microservice_secret_database
        image: mysql
        environment:
            - MYSQL_ROOT_PASSWORD=mysecret
            - MYSQL_DATABASE=finding_secrets
            - MYSQL_USER=secret
            - MYSQL_PASSWORD=mysecret
        ports:
            - 6666:3306
        command: ["--default-authentication-plugin=mysql_native_password"]

    ##
    # Telemetry: prometheus
    ##
    telemetry:
        container_name: telemetry
        image: prom/prometheus:v2.36.1
        volumes:
            - ./telemetry/etc:/etc/prometheus/
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - "9999:9090"

    ##
    # Sentry
    ##
    sentry_redis:
        container_name: sentry_redis
        image: redis:6.2.4
        expose:
            - 6379
    sentry_postgres:
        container_name: sentry_postgres
        image: postgres
        environment:
        - POSTGRES_PASSWORD=sentry
        - POSTGRES_USER=sentry
        volumes:
            - postgresql-db-data:/var/lib/postgresql/data
        expose:
            - 5432
    sentry:
        container_name: sentry
        image: sentry
        ports:
            - 9876:9000
        environment:
            SENTRY_SECRET_KEY: mymicrosecret
            SENTRY_POSTGRES_HOST: sentry_postgres
            SENTRY_REDIS_HOST: sentry_redis
            SENTRY_DB_USER: sentry
            SENTRY_DB_PASSWORD: sentry
        depends_on:
            - sentry_redis
            - sentry_postgres
        expose:
          - 9000
    sentry_celery-beat:
        container_name: sentry_celery-beat
        image: sentry
        depends_on:
            - sentry
        command: sentry run cron
        environment:
            SENTRY_SECRET_KEY: mymicrosecret
            SENTRY_POSTGRES_HOST: sentry_postgres
            SENTRY_REDIS_HOST: sentry_redis
            SENTRY_DB_USER: sentry
            SENTRY_DB_PASSWORD: sentry
    sentry_celery-worker:
        container_name: sentry_celery-worker
        image: sentry
        depends_on:
            - sentry
        command: sentry run worker
        environment:
            SENTRY_SECRET_KEY: mymicrosecret
            SENTRY_POSTGRES_HOST: sentry_postgres
            SENTRY_REDIS_HOST: sentry_redis
            SENTRY_DB_USER: sentry
            SENTRY_DB_PASSWORD: sentry
            C_FORCE_ROOT: 1

volumes:
    postgresql-db-data: